@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    @return $number;
}

@function smooth-value($firstValue, $secondValue, $firstPoint, $secondPoint, $dimension) {
    @return calc(
        #{$firstValue}
        + (#{strip-unit($secondValue)} - #{strip-unit($firstValue)})
        * (100v#{$dimension} - #{$firstPoint})
        / (#{strip-unit($secondPoint)} - #{strip-unit($firstPoint)})
    );
}

@mixin tablet-offset {
    @include media-breakpoint-down(xxl) {
        padding-left: 2rem;
        padding-right: 2rem;
    }
}

@mixin mobile-offset {
    @include media-breakpoint-down(sm) {
        padding-left: 2rem;
        padding-right: 2rem;
    }
}

@mixin states {
    &:hover,
    &:focus,
    &:active {
        @content;
    }
}

@mixin linkHover($mobile-show-line: false, $color: $color-9, $width: '1px', $desktop-show-line: false) {
    box-shadow: 0 #{$width} 0 0 rgba($color, 0);
    transition: box-shadow .3s ease-out;

    @include states {
        box-shadow: 0 #{$width} 0 0 $color;
    }

    @if $mobile-show-line {
        @include media-breakpoint-down(sm) {
            box-shadow: 0 #{$width} 0 0 $color;
        }
    }

    @if $desktop-show-line {
        box-shadow: 0 #{$width} 0 0 $color;
    }
}

@mixin hint-hover($text-attr) {
    position: relative;

    &:hover {
        &::before {
            transform: translateY(-100%) translate(-50%,-8px) scale(1);
        }

        &::after {
            transform: translateY(-100%) translate(-50%, -50%) rotate(45deg) scale(1);
            transition: transform 0.03s 0.17s ease-in-out;
        }
    }

    &::before {
        content: attr(#{$text-attr});
        position: absolute;
        top: 0;
        left: 50%;
        padding: 15px 20px;
        min-width: 100%;
        max-width: 300px;
        width: auto;
        width: max-content;
        @include font-23;
        white-space: normal;
        color: #000000;
        text-align: center;
        border-radius: 20px;
        background-color: white;
        box-shadow: 0px 30px 80px rgba(55, 84, 170, 0.1);
        transform: translateY(-100%) translate(-50%, -8px) scale(0);
        transition: transform 0.2s ease-in-out;

        @include media-breakpoint-down(sm) {
            display: none;
        }
    }

    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        width: 8.5px;
        height: 8.5px;
        background-color: white;
        transform: translateY(-100%) translate(-50%, -50%) rotate(45deg) scale(0);
        transition: transform 0.01s ease-in-out;

        @include media-breakpoint-down(sm) {
            display: none;
        }
    }
}
